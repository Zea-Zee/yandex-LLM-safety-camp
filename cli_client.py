#!/usr/bin/env python3
"""
CLI –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Yandex GPT —Å realtime –≤—ã–≤–æ–¥–æ–º
"""
import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'yandex_gpt'))

from yandex_gpt import YandexGPTApi


class CLIClient:
    def __init__(self):
        self.gpt_api = YandexGPTApi()
        print("ü§ñ CLI –∫–ª–∏–µ–Ω—Ç –¥–ª—è Yandex GPT –∑–∞–ø—É—â–µ–Ω!")
        print("üí° –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
        print("-" * 50)

    def print_realtime_response(self, question):
        """–í—ã–≤–æ–¥–∏—Ç –æ—Ç–≤–µ—Ç GPT –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
        print(f"\nüë§ –í—ã: {question}")
        print("ü§ñ GPT: ", end="", flush=True)

        try:
            # –ü–æ–ª—É—á–∞–µ–º streaming –æ—Ç–≤–µ—Ç
            response_generator = self.gpt_api.ask_gpt(
                {"user": question},
                stream=True
            )

            full_response = ""
            for chunk in response_generator:
                if chunk:
                    print(chunk, end="", flush=True)
                    full_response += chunk
                    time.sleep(0.01)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏

            if not full_response:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç GPT")

            print("\n" + "-" * 50)

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            print("-" * 50)

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª CLI"""
        while True:
            try:
                question = input("\n> ").strip()

                if question.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break

                if not question:
                    print("‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å")
                    continue

                self.print_realtime_response(question)

            except KeyboardInterrupt:
                print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except EOFError:
                print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


def main():
    """–ó–∞–ø—É—Å–∫ CLI –∫–ª–∏–µ–Ω—Ç–∞"""
    try:
        client = CLIClient()
        client.run()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")


if __name__ == "__main__":
    main()
